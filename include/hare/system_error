#ifndef HARE_SYSTEM_ERROR
#define HARE_SYSTEM_ERROR

#include <system_error>

/**************************************************************************
 * <hare/system_error> handy convenience methods for <system_error>.
 *
 * @author Hannes Reisinger github@HaRe.at
 **************************************************************************/

#include <hare/strprintf>

#include <errno.h>

namespace hare {
	/**********************************************************************
	 * In most cases I want to create a system_error with a system_category
	 * and use the current errno.
	 **********************************************************************/
	struct system_error : public std::system_error {
		system_error() : std::system_error(errno, std::system_category()) {}
		system_error(const std::string& what) : std::system_error(errno, std::system_category(), what) {}
		system_error(const char *what) : std::system_error(errno, std::system_category(), what) {}
		template<typename ... Args>
		system_error(const char *format, Args ... args)
			: std::system_error(errno, std::system_category(), strprintf<256>(format, args ...)) {}
	};
}	// namespace hare

#endif	// HARE_SYSTEM_ERROR
